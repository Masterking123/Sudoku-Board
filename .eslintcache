[{"C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\index.js":"1","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\App.js":"2","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\index.js":"3","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\solver.js":"4","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\home.js":"5","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\error.js":"6","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\navbar.js":"7","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\functions\\valid.js":"8","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\functions\\solve.js":"9"},{"size":219,"mtime":1612039947888,"results":"10","hashOfConfig":"11"},{"size":176,"mtime":1613185819703,"results":"12","hashOfConfig":"11"},{"size":550,"mtime":1612385470664,"results":"13","hashOfConfig":"11"},{"size":3159,"mtime":1616456892477,"results":"14","hashOfConfig":"11"},{"size":748,"mtime":1613185776826,"results":"15","hashOfConfig":"11"},{"size":803,"mtime":1612293952256,"results":"16","hashOfConfig":"11"},{"size":265,"mtime":1612280378672,"results":"17","hashOfConfig":"11"},{"size":1030,"mtime":1616296054113,"results":"18","hashOfConfig":"11"},{"size":1487,"mtime":1616296394738,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"66mpmv",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\index.js",[],["43","44"],"C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\App.js",[],"C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\index.js",[],"C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\solver.js",["45","46"],"import { React, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { valid } from \"./functions/valid\";\r\nimport { solve } from \"./functions/solve\";\r\n\r\nconst Solver = () => {\r\n  const [grid, setGrid] = useState([]);\r\n  const [highlight, setHighlight] = useState([]);\r\n\r\n  const createRandom = () => {\r\n    let newGrid = [...grid];\r\n    for (var __ = 0; __ < 81; __++) {\r\n      newGrid[__] = Math.floor(Math.random() * 9) + 1;\r\n    }\r\n    setGrid(newGrid);\r\n  };\r\n\r\n  const onClear = () => {\r\n    let emptyGrid = [];\r\n    for (let i = 0; i < 81; i++) {\r\n      emptyGrid.push(\"\");\r\n    }\r\n    setGrid(emptyGrid);\r\n  };\r\n\r\n  const onSolve = () => {\r\n    if (valid(grid)[0] === true) {\r\n      let result = solve(grid);\r\n      let bool = true;\r\n      for (let _ = 0; _ < 81; _++) {\r\n        if (result[_] !== grid[_]) {\r\n          bool = false;\r\n          break;\r\n        }\r\n      }\r\n      if (bool === false) {\r\n        setGrid(result);\r\n      } else {\r\n        alert(\"This grid has no solutions\");\r\n      }\r\n    } else {\r\n      alert(\"This Grid has some errors\");\r\n    }\r\n  };\r\n\r\n  const onValid = () => {\r\n    if (valid(grid)[0] === true) {\r\n      alert(\"This Grid is good to solve\");\r\n    } else {\r\n      alert(\"This Grid has some errors\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.value === \"0\") {\r\n      e.target.value = null;\r\n    } else if (e.target.value.length > 1) {\r\n      e.target.value = e.target.value.slice(0, 1);\r\n    } else {\r\n      let index = e.target.id.slice(5, e.target.id.length);\r\n      let newArr = [...grid];\r\n      newArr[index] = e.target.value;\r\n      setGrid(newArr);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let emptyGrid = [];\r\n    let boolGrid = [];\r\n    for (var _ = 0; _ < 81; _++) {\r\n      emptyGrid.push(\"\");\r\n    }\r\n    setGrid(emptyGrid);\r\n    setHighlight(emptyGrid);\r\n  }, []);\r\n\r\n  var tdCells = [];\r\n  var trCells = [];\r\n  var count = 0;\r\n\r\n  for (var i = 0; i < 81; i++) {\r\n    count++;\r\n    tdCells.push(\r\n      <td>\r\n        <input\r\n          id={\"cell-\" + i}\r\n          type=\"number\"\r\n          onWheel=\"this.blur()\"\r\n          onChange={handleChange}\r\n          value={grid[i]}\r\n          isHighlight={highlight[i]}\r\n        />\r\n      </td>\r\n    );\r\n    if (count % 9 === 0) {\r\n      trCells.push(<tr>{tdCells}</tr>);\r\n      tdCells = [];\r\n    }\r\n  }\r\n  console.log(trCells[0]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"solver_page\">\r\n        <div className=\"heading\">\r\n          <h1>Sudoku Solver</h1>\r\n          <div>\r\n            <table>{trCells}</table>\r\n          </div>\r\n          <button className=\"btn\" id=\"solveButton\" onClick={onSolve}>\r\n            Solve\r\n          </button>\r\n          <button className=\"btn\" id=\"validButton\" onClick={onValid}>\r\n            Valid\r\n          </button>\r\n          <button className=\"btn\" id=\"clearButton\" onClick={onClear}>\r\n            Clear\r\n          </button>\r\n          <button className=\"btn\">\r\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n              Back to Home\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Solver;\r\n","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\home.js",[],"C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\error.js",["47"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQLXqgW1JWA4WqSKo4UdRwF7u223TowRTtFMQ&usqp=CAU\"\r\n            alt=\"Image Cannot Be Loaded\"\r\n          />\r\n          <h1>ERROR 404: Page Not Found</h1>\r\n          <h3>\r\n            Note to Self: The image is place holder and use photoshop to fix it!\r\n            :D\r\n          </h3>\r\n          <button className=\"btn\">\r\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n              Back To Home Page\r\n            </Link>\r\n          </button>\r\n        </header>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\navbar.js",[],["48","49"],"C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\functions\\valid.js",["50"],"import React from \"react\";\r\n\r\nexport const valid = (arr) => {\r\n  let board = [];\r\n  let tmp = [];\r\n  for (var _ = 0; _ < 81; _++) {\r\n    tmp.push(arr[_]);\r\n    if ((_ + 1) % 9 === 0) {\r\n      board.push(tmp);\r\n      tmp = [];\r\n    }\r\n  }\r\n\r\n  let boxes = [{}, {}, {}, {}, {}, {}, {}, {}, {}];\r\n  const errors = [];\r\n\r\n  for (var i = 0; i < 9; i++) {\r\n    for (var j = 0; j < 9; j++) {\r\n      if (board[i][j] !== \"\") {\r\n        for (var k = 0; k < 9; k++) {\r\n          if (k !== j && board[i][j] === board[i][k]) {\r\n            errors.push([i, j]);\r\n          }\r\n          if (k !== i && board[i][j] === board[k][j]) {\r\n            errors.push([i, j]);\r\n          }\r\n        }\r\n        let index = Math.floor(i / 3) * 3 + Math.floor(j / 3);\r\n        if (board[i][j] in boxes[index]) {\r\n          errors.push([i, j]);\r\n        } else {\r\n          boxes[index][board[i][j]] = index;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  if (errors.length >= 1) {\r\n    console.log(errors);\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","C:\\Users\\thake\\OneDrive\\Desktop\\sudoku\\src\\components\\functions\\solve.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":9,"nodeType":"57","messageId":"58","endLine":10,"endColumn":21},{"ruleId":"55","severity":1,"message":"59","line":69,"column":9,"nodeType":"57","messageId":"58","endLine":69,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":9,"column":11,"nodeType":"62","endLine":12,"endColumn":13},{"ruleId":"51","replacedBy":"63"},{"ruleId":"53","replacedBy":"64"},{"ruleId":"55","severity":1,"message":"65","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'createRandom' is assigned a value but never used.","Identifier","unusedVar","'boolGrid' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["66"],["67"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation"]